include "kamon"
akka {
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  remote.artery {
    canonical.port = 2552
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = ["akka://pdnd-interop-uservice-purpose-management@127.0.0.1:2552"]
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  }

  typed {
    stash-capacity = 200000
  }

  management {
    http {
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.pdnd.interop.uservice.purposemanagement.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.pdnd.interop.uservice.purposemanagement.server.impl.LiveCheck"
      }
    }
  }
}

uservice-purpose-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  persistence = "memory"
  port = 8088
  jwt {
    audience = [ ${MAIN_AUDIENCE} ]
  }
}

pdnd-interop-commons {
  jwt {
    public-keys {
      url = ${WELL_KNOWN_URL}
    }
  }
}
